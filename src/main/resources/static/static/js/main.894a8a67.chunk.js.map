{"version":3,"sources":["components/Config.js","_actions/user_actions.js","_actions/types.js","hoc/auth.js","components/views/LandingPage/Sections/MainImage.js","components/views/commons/TvGridCards.js","components/views/LandingPage/TvLandingPage.js","components/ConfigMovie.js","components/views/LandingPage/Sections/MovieMainImage.js","components/views/commons/MovieGridCards.js","components/views/LandingPage/MovieLandingPage.js","components/CalenderComponents/CalendarHeader/CalendarHeader.jsx","components/CalenderComponents/Day/Day.jsx","components/CalenderComponents/NewEventModal/NewEventModal.jsx","components/CalenderComponents/DeleteEventModal/DeleteEventModal.jsx","components/CalenderComponents/App/App2.js","components/CalenderComponents/hooks/useDate.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","components/views/TvDetail/Sections/TvInfo.js","components/views/TvDetail/Sections/Favorite.js","components/views/TvDetail/TvDetail.js","components/views/MovieDetail/Sections/MovieInfo.js","components/views/MovieDetail/Sections/MovieLikeList.js","components/views/MovieDetail/MovieDetail.js","components/views/MovieDetail/Sections/MovieLikeListItem.js","components/views/MovieDetail/Sections/MovieLikeListView.js","components/views/Map/Map.js","components/App.js","serviceWorker.js","_reducers/index.js","_reducers/user_reducer.js","index.js"],"names":["API_URL","API_KEY","IMAGE_BASE_URL","auth","type","payload","axios","get","then","response","data","SpecificComponent","option","adminRoute","AuthenticationCheck","props","user","useSelector","state","dispatch","useDispatch","useEffect","isAuth","isAdmin","history","push","MainImage","style","background","image","height","backgroundSize","backgroundPosition","width","position","maxWidth","bottom","marginLeft","color","title","fontSize","text","TvGridCards","TvLandingPage","lg","md","xs","href","tvId","src","alt","tvName","charactorName","useState","Tv","setTv","MainTvImage","setMainTvImage","CurrentPage","setCurrentPage","endpoint","fetchTv","fetch","json","console","log","results","page","margin","backdrop_path","name","overview","gutter","map","index","Fragment","key","poster_path","id","original_title","display","justifyContent","onClick","MovieMainImage","MovieGridCards","landingPage","movieId","movieName","characterName","MovieLandingPage","Movies","setMovies","MainMovieImage","setMainMovieImage","fetchMovies","movie","className","CalendarHeader","onNext","onBack","dateDisplay","Day","day","value","isCurrentDay","event","NewEventModal","onSave","onClose","setTitle","error","setError","onChange","e","target","placeholder","DeleteEventModal","onDelete","eventText","App2","nav","setNav","clicked","setClicked","localStorage","getItem","JSON","parse","events","setEvents","eventForDate","date","find","setItem","stringify","setDateDisplay","days","setDays","dt","Date","setMonth","getMonth","getDate","month","year","getFullYear","firstDayOfMonth","daysInMonth","dateString","toLocaleDateString","weekday","paddingDays","indexOf","split","daysArr","i","dayString","useDate","d","filter","LoginPage","useHistory","userId","userPwd","setUserId","setUserPwd","class","onSubmit","preventDefault","frmData","FormData","document","login","post","alert","catch","err","currentTarget","RegisterPage","userName","userEmail","setUser","join","userconfPwd","onReset","Menu","SubMenu","ItemGroup","LeftMenu","mode","Item","RightMenu","NavBar","visible","setVisible","zIndex","placement","closable","Footer","flexDirection","alignItems","TvInfo","tv","bordered","label","first_air_date","last_air_date","episode_run_time","span","vote_average","vote_count","origin_country","popularity","Favorite","userFrom","tvTitle","tvPost","tvRunTime","runtime","FavoriteNumber","setFavoriteNumber","Favorited","setFavorited","variables","Axios","favoriteNumber","success","favorited","TvDetail","match","params","Casts","setCasts","ActorToggle","setActorToggle","endpointCrew","endpintInfo","cast","profile_path","MovieInfo","release_date","revenue","status","MovieLikeList","movieTitle","movieInfo","moviePost","movieRuntime","frmInsert","MovieDetail","Movie","setMovie","endprintInfo","margintop","MovieLikeListItem","marginBottom","marginTop","border","borderRadius","marginRight","float","padding","textAlign","borderRight","lineHeight","aria-label","window","confirm","location","reload","MovieLikeListView","setData","setLoading","loadData","a","likeList","paddingTop","Location","infowindow","placesSearchCB","pagination","kakao","maps","services","Status","OK","bounds","LatLngBounds","length","displayMarker","extend","LatLng","y","x","setBounds","place","marker","Marker","addListener","setContent","place_name","open","InfoWindow","mapContainer","getElementById","mapOption","center","level","Map","mapTypeControl","MapTypeControl","addControl","ControlPosition","TOPRIGHT","zoomControl","ZoomControl","RIGHT","Places","keywordSearch","App","fallback","minHeight","exact","path","component","Auth","CalenderPage","Boolean","hostname","rootReducer","combineReducers","action","register","loginSuccess","userData","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.894a8a67.chunk.js","sourcesContent":["//SERVER ROUTES\nexport const USER_SERVER = '/api/users';\n\nexport const API_URL = 'https://api.themoviedb.org/3/';\n\nexport const API_KEY = '30812966228ecc600792444d69a70fcf';\n\nexport const IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';","import axios from 'axios';\nimport {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from './types';\nimport { USER_SERVER } from '../components/Config.js';\n\nexport function registerUser(dataToSubmit){\n    const request = axios.post(`http://localhost:8080/join`,dataToSubmit)\n        .then(response => response.data);\n    \n    return {\n        type: REGISTER_USER,\n        payload: request\n    }\n}\n\nexport function loginUser(dataToSubmit){\n    const request = axios.post(`http://localhost:8080/login`,dataToSubmit)\n                .then(response => response.data);\n        \n    return {\n        type: LOGIN_USER,\n        payload: request\n    }\n}\n\nexport function auth(){\n    const request = axios.get(`${USER_SERVER}/auth`)\n    .then(response => response.data);\n\n    return {\n        type: AUTH_USER,\n        payload: request\n    }\n}\n\nexport function logoutUser(){\n    const request = axios.get(`${USER_SERVER}/logout`)\n    .then(response => response.data);\n\n    return {\n        type: LOGOUT_USER,\n        payload: request\n    }\n}\n\n","export const LOGIN_USER = 'LOGIN_USER';\nexport const REGISTER_USER = 'REGISTER_USER';\nexport const AUTH_USER = 'AUTH_USER';\nexport const LOGOUT_USER = 'LOGOUT_USER';\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { auth } from '../_actions/user_actions';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function (SpecificComponent, option, adminRoute = null) {\n    function AuthenticationCheck(props) {\n\n        let user = useSelector(state => state.user);\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n            //To know my current status, send Auth request \n            dispatch(auth()).then(response => {\n                //Not Loggined in Status \n                if (!response.payload.isAuth) {\n                    if (option) {\n                        props.history.push('/login')\n                    }\n                    //Loggined in Status \n                } else {\n                    //supposed to be Admin page, but not admin person wants to go inside\n                    if (adminRoute && !response.payload.isAdmin) {\n                        props.history.push('/')\n                    }\n                    //Logged in Status, but Try to go into log in page \n                    else {\n                        if (option === false) {\n                            props.history.push('/')\n                        }\n                    }\n                }\n            })\n\n        }, [])\n\n        return (\n            <SpecificComponent {...props} user={user} />\n        )\n    }\n    return AuthenticationCheck\n}\n\n\n","import React from 'react';\n\nfunction MainImage(props) {\n    return (\n        <div style={{\n            background: `linear-gradient(to bottom, rgba(0,0,0,0)\n        39%,rgba(0,0,0,0)\n        41%,rgba(0,0,0,0.65)\n        100%),\n        url('${props.image}'), #1c1c1c`,\n            height: '500px',\n            backgroundSize: '100%, cover',\n            backgroundPosition: 'center, center',\n            width: '100%',\n            position: 'relative'\n        }}>\n\n            <div>\n                <div style={{ position: 'absolute', maxWidth: '500px', bottom: '2rem', marginLeft: '2rem' }}>\n                    <h2 style={{ color: 'white' }}>  {props.title} </h2>\n                    <p style={{ color: 'white', fontSize: '1rem' }}> {props.text}</p>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default MainImage","import React from 'react'\nimport {Col} from 'antd';\n\nfunction TvGridCards(props) {\n\n    if (props.TvLandingPage) {\n        return (\n        <Col lg={6} md={8} xs={24}>\n        <div style={{ position: 'relative' }}>\n            <a href={`/tv/${props.tvId}`} >\n                <img style={{ width: '100%', height: '320px' }} src={props.image} alt={props.tvName} />\n            </a>\n        </div>\n        </Col>\n        )\n        \n    }\n    else{\n        return(\n            <Col lg={6} md={8} xs={24}>\n            <div style={{ position: 'relative' }}>\n                \n                    <img style={{ width: '100%', height: '320px' }} src={props.image} alt={props.charactorName} />\n              \n            </div>\n            </Col>\n\n        )\n    }\n    \n}\n\nexport default TvGridCards\n\n","import React, { useEffect, useState } from 'react'\nimport { FaCode } from \"react-icons/fa\";\nimport { API_URL, API_KEY, IMAGE_BASE_URL } from '../../Config';\nimport MainImage from './Sections/MainImage';\nimport axios from 'axios';\nimport { Row } from 'antd';\nimport TvGridCards from '../commons/TvGridCards';\n\n\nfunction TvLandingPage() {\n\n\n    const [Tv, setTv] = useState([])\n    const [MainTvImage, setMainTvImage] = useState(null)\n    const [CurrentPage, setCurrentPage] = useState(0)\n   \n   \n\n    useEffect(() => {\n        const endpoint = `${API_URL}tv/popular?api_key=${API_KEY}&language=ko-KR&page=1`;      \n        fetchTv(endpoint)\n            \n    }, [])\n\n    const fetchTv = (endpoint) => {\n        fetch(endpoint)\n            .then(response => response.json())\n            .then(response => {\n                console.log(response)\n                setTv([...Tv, ...response.results])\n                setMainTvImage(response.results[0])\n                setCurrentPage(response.page)\n            })\n    }\n\n    const loadMoreItems = () => {\n\n        const endpoint = `${API_URL}tv/popular?api_key=${API_KEY}&language=ko-KR&page=${CurrentPage + 1}`;\n        fetchTv(endpoint)\n\n    }\n   \n\n\n    return (\n        <div style={{ width: '100%', margin: '0' }}>\n\n            {/* Main Image */}\n            {MainTvImage &&\n                <MainImage\n                    image={`${IMAGE_BASE_URL}w1280${MainTvImage.backdrop_path}`}\n                    title={MainTvImage.name}\n                    text={MainTvImage.overview}\n                />\n            }\n            <div style={{ width: '85%', margin: '1rem auto' }}>\n\n                <h2>최신 드라마 </h2>\n                <hr />\n\n                {/* Movie Grid Cards */}\n                <Row gutter={[16, 16]} >\n\n                    {Tv && Tv.map((Tv, index) => (\n                        <React.Fragment key={index}>\n                            <TvGridCards\n                            TvLandingPage\n                                image={Tv.poster_path ?\n                                    `${IMAGE_BASE_URL}w500${Tv.poster_path}` : null}\n                                tvId={Tv.id}\n                                tvName={Tv.original_title}\n                            />\n                        </React.Fragment>\n                    ))}\n\n                </Row>\n                \n{/* 깃업로드 테스트 */}\n            </div>\n\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n            <button onClick={loadMoreItems}> 더보기 </button>\n            </div>\n\n        </div>\n    )\n}\n\nexport default TvLandingPage","//SERVER ROUTES\nexport const USER_SERVER = '/api/users';\n\nexport const API_URL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = '43c60338abf7b753ae1a20757df07a29';\nexport const IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n\n\n","import React from 'react';\n\nfunction MovieMainImage(props) {\n    return (\n        // props로 전달하여 image,title,text 출력\n        <div style={{\n            background: `linear-gradient(to bottom, rgba(0,0,0,0)\n            39%,rgba(0,0,0,0)\n            41%,rgba(0,0,0,0.65)\n            100%),\n            url('${props.image}'), #1c1c1c`,\n            height: '500px',\n            backgroundSize: '100%, cover',\n            backgroundPosition: 'center, center',\n            width: '100%',\n            position: 'relative'\n        }}>\n            <div>\n                <div style={{ position: 'absolute', maxWidth: '500px', bottom: '2rem', marginLeft: '2rem' }}>\n                    <h2 style={{ color: 'white' }}> {props.title} </h2>\n                    <p style={{ color: 'white', fontSize: '1rem' }}>{props.text}</p>\n                </div>\n\n            </div>\n        </div>\n    );\n}\n\n// 다른곳에서도 사용할 수 있도록 export\nexport default MovieMainImage;","import React from 'react';\nimport { Col } from 'antd';\n\n\nfunction MovieGridCards(props) {\n    // GridCards를 여러곳에서 사용하기 때문에 if로 나누는데\n    // 이때 props에 landingPage가 있다면 ... 이런식으로 나눠준다.\n    if (props.landingPage) {\n        return (\n            // 컴럼 하나의 사이즈는 6\n            <Col lg={6} md={8} xs={24}>\n                <div style={{ position: 'relative' }}>\n                    <a href={`/movie/${props.movieId}`} >\n                        <img style={{ width: '100%', height: '320px' }}\n                            src={props.image} alt={props.movieName} />\n                    </a>\n                </div>\n            </Col>\n        );\n\n    } else {\n        return (\n            // 컴럼 하나의 사이즈는 6\n            <Col lg={6} md={8} xs={24}>\n                <div style={{ position: 'relative' }}>\n                    <img style={{ width: '100%', height: '320px' }}\n                        src={props.image} alt={props.characterName} />\n\n                </div>\n            </Col>\n        );\n    }\n\n}\n\nexport default MovieGridCards;","import React, { useEffect, useState } from 'react'\nimport { FaCode } from \"react-icons/fa\";\nimport { API_URL, API_KEY, IMAGE_BASE_URL } from '../../ConfigMovie';\nimport MovieMainImage from './Sections/MovieMainImage'\nimport MovieGridCards from '../commons/MovieGridCards';\nimport { Row } from 'antd';\nimport './MovieLandingPage.css';\n\nfunction MovieLandingPage() {\n    // json 값이 여러개이므로 배열로 state 생성\n    const [Movies, setMovies] = useState([])\n    const [MainMovieImage, setMainMovieImage] = useState(null)\n    // 페이지를 저장할 state\n    const [CurrentPage, setCurrentPage] = useState(0);\n\n    // useEffect : 컴포넌트 부수효과 관리 (API호출, 이벤트 처리 등)\n    useEffect(() => {\n        // 영화 정보를 가져오는 API 적용\n        const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=ko-KR&page=1`;\n\n        fetchMovies(endpoint);\n\n    }, [])\n\n\n    const fetchMovies = (endpoint) => {\n        fetch(endpoint)\n            // json 처리로 읽을 수 있도록 함\n            .then(response => response.json())\n            .then(response => {\n                console.log(response.results)\n                // api에서 받아온 json안 result 값을 배열로 넣어준다.\n                // 기존 Moives 데이터에 results값을 추가 시키기\n                setMovies([...Movies, ...response.results])\n                //console.log(Movies);\n                // 0번째(가장 유명한 영화) json 결과값을 모두 넣어준다.\n                setMainMovieImage(response.results[0])\n                // 현재 페이지 값 저장\n                setCurrentPage(response.page)\n            })\n    }\n\n    const loadMoreItems = () => {\n        // 저장한 현재페이지에 + 1 값으로 api에서 불러옴\n        const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=ko-KR&page=${CurrentPage + 1}`;\n        fetchMovies(endpoint);\n    }\n\n\n\n    return (\n        <div style={{ width: '100%', margin: '0' }}>\n\n            {/* Main Image */}\n            {/* && 있다면 처리하라는 명령 */}\n            {MainMovieImage &&\n                <MovieMainImage\n                    image={`${IMAGE_BASE_URL}w1280${MainMovieImage.backdrop_path}`}\n                    title={MainMovieImage.title}\n                    text={MainMovieImage.overview}\n                />\n            }\n            <div style={{ width: '85%', margin: '1rem auto' }}>\n\n                <h2>최신 개봉작</h2>\n                <hr />\n\n                {/* Movie Grid Cards */}\n                <Row gutter={[16, 16]}>\n                    {/* Movie map 설정 => movie */}\n                    {Movies && Movies.map((movie, index) => (\n                        <React.Fragment key={index}>\n                            <MovieGridCards\n                                landingPage\n                                image={movie.poster_path ? `${IMAGE_BASE_URL}w500${movie.poster_path}` : null}\n                                movieId={movie.id}\n                                movieName={movie.original_title}\n                            />\n                        </React.Fragment>\n                    ))}\n\n\n                </Row>\n\n            </div>\n\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                {/* 버튼 클릭시 */}\n                <button className='more' onClick={loadMoreItems}>더보기</button>\n            </div>\n        </div >\n    )\n}\n\nexport default MovieLandingPage\n","import React from 'react';\n\nexport const CalendarHeader = ({ onNext, onBack, dateDisplay }) => {\n  return(\n    <div id=\"header\">\n      <div id=\"monthDisplay\">{dateDisplay}</div>\n      <div>\n        <button onClick={onBack} id=\"backButton\">Back</button>\n        <button onClick={onNext} id=\"nextButton\">Next</button>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const Day = ({ day, onClick }) => {\n  const className = `day ${day.value === 'padding' ? 'padding' : ''} ${day.isCurrentDay ? 'currentDay' : ''}`;\n  return (\n    <div onClick={onClick} className={className}>\n      {day.value === 'padding' ? '' : day.value}\n\n      {day.event && <div className='event'>{day.event.title}</div>}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\n\nexport const NewEventModal = ({ onSave, onClose }) => {\n  const [title, setTitle] = useState('');\n  const [error, setError] = useState(false);\n\n  return(\n    <>\n      <div id=\"newEventModal\">\n        <h2>새 일정</h2>\n\n        <input \n          className={error ? 'error' : ''}\n          value={title} \n          onChange={e => setTitle(e.target.value)} \n          id=\"eventTitleInput\" \n          placeholder=\"일정을 입력하세요.\" \n        />\n\n        <button \n          onClick={() => {\n            if (title) {\n              setError(false);\n              onSave(title);\n            } else {\n              setError(true);\n            }\n          }} \n          id=\"saveButton\">저장</button>\n\n\n        <button \n          onClick={onClose}\n          id=\"cancelButton\">취소</button>\n      </div>\n\n      <div id=\"modalBackDrop\"></div>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const DeleteEventModal = ({ onDelete, eventText, onClose }) => {\n  return(\n    <>\n      <div id=\"deleteEventModal\">\n        <h2>일정</h2>\n\n        <p id=\"eventText\">{eventText}</p>\n\n        <button onClick={onDelete} id=\"deleteButton\">삭제</button>\n        <button onClick={onClose} id=\"closeButton\">취소</button>\n      </div>\n\n      <div id=\"modalBackDrop\"></div>\n    </>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { CalendarHeader } from '../CalendarHeader';\nimport { Day } from '../Day';\nimport { NewEventModal } from '../NewEventModal';\nimport { DeleteEventModal } from '../DeleteEventModal';\nimport { useDate } from '../hooks/useDate';\n\n  const App2 = () => {\n  const [nav, setNav] = useState(0);\n  const [clicked, setClicked] = useState();\n  const [events, setEvents] = useState(\n    localStorage.getItem('events') ? \n      JSON.parse(localStorage.getItem('events')) : \n      []\n  );\n\n  const eventForDate = date => events.find(e => e.date === date);\n\n  useEffect(() => {\n    localStorage.setItem('events', JSON.stringify(events));\n  }, [events]);\n\n  const { days, dateDisplay } = useDate(events, nav);\n\n  return(\n    <>\n    <div id=\"maincontainer\">\n      <div id=\"container\">\n        <CalendarHeader \n          dateDisplay={dateDisplay}\n          onNext={() => setNav(nav + 1)}\n          onBack={() => setNav(nav - 1)}\n        />\n\n        <div id=\"weekdays\">\n          <div>Sunday</div> \n          <div>Monday</div>\n          <div>Tuesday</div>\n          <div>Wednesday</div>\n          <div>Thursday</div>\n          <div>Friday</div>\n          <div>Saturday</div>\n        </div>\n\n        <div id=\"calendar\">\n          {days.map((d, index) => (\n            <Day\n              key={index}\n              day={d}\n              onClick={() => {\n                if (d.value !== 'padding') {\n                  setClicked(d.date);\n                }\n              }}\n            />\n          ))}\n        </div>\n      </div>\n      </div>\n\n      {\n        clicked && !eventForDate(clicked) &&\n        <NewEventModal\n          onClose={() => setClicked(null)}\n          onSave={title => {\n            setEvents([ ...events, { title, date: clicked }]);\n            setClicked(null);\n          }}\n        />\n      }\n\n      {\n        clicked && eventForDate(clicked) &&\n        <DeleteEventModal \n          eventText={eventForDate(clicked).title}\n          onClose={() => setClicked(null)}\n          onDelete={() => {\n            setEvents(events.filter(e => e.date !== clicked));\n            setClicked(null);\n          }}\n        />\n      }\n    </>\n  );\n};\n\nexport default App2;\n// export * from './App2';","import React, { useEffect, useState } from 'react';\n\nexport const useDate = (events, nav) => {\n  const [dateDisplay, setDateDisplay] = useState('');\n  const [days, setDays] = useState([]);\n\n  const eventForDate = date => events.find(e => e.date === date);\n\n  useEffect(() => {\n    const weekdays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    const dt = new Date();\n\n    if (nav !== 0) {\n      dt.setMonth(new Date().getMonth() + nav);\n    }\n\n    const day = dt.getDate();\n    const month = dt.getMonth();\n    const year = dt.getFullYear();\n\n    const firstDayOfMonth = new Date(year, month, 1);\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n    const dateString = firstDayOfMonth.toLocaleDateString('en-us', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric',\n    });\n\n    setDateDisplay(`${dt.toLocaleDateString('en-us', { month: 'long' })} ${year}`);\n    const paddingDays = weekdays.indexOf(dateString.split(', ')[0]);\n\n    const daysArr = [];\n\n    for (let i = 1; i <= paddingDays + daysInMonth; i++) {\n      const dayString = `${month + 1}/${i - paddingDays}/${year}`;\n\n      if (i > paddingDays) {\n        daysArr.push({\n          value: i - paddingDays,\n          event: eventForDate(dayString),\n          isCurrentDay: i - paddingDays === day && nav === 0,\n          date: dayString,\n        });\n      } else {\n        daysArr.push({\n          value: 'padding',\n          event: null,\n          isCurrentDay: false,\n          date: '',\n        });\n      }\n    }\n\n    setDays(daysArr);\n  }, [events, nav]);\n\n  return {\n    days,\n    dateDisplay,\n  };\n};\n","import React, { useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from \"react-redux\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport axios from 'axios';\nimport './LoginPage.css'\n\nfunction LoginPage(props) {\n\n  let history = useHistory();\n  const [user, setUser] = useState({\n    userId: '',\n    userPwd: ''\n  });\n  const [userId, setUserId] = useState(\"\");\n  const [userPwd, setUserPwd] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const onIdHandeler = (e) => {\n    setUserId(e.currentTarget.value);\n  };\n\n  const onPwdHandeler = (e) => {\n    setUserPwd(e.currentTarget.value);\n  };\n\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    var frmData = new FormData(document.login);\n\n    axios.post('http://localhost:8080/loginCheck',frmData)\n    .then(\n        response => {\n          if (response.data===\"success\") {\n            console.log(\"성공\",response);\n            alert(\"로그인 성공!\\n메인화면으로 이동합니다\");\n            history.push(\"/\");\n          } else {\n            console.log(\"실패\",response);\n            alert(\"아이디 또는 비밀번호를 확인해주세요!\");\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n\n        //   console.log(response);\n        //   if (response.payload.loginSuccess) {\n        //     props.history.push(\"/\");\n        //   } else {\n        //     alert(response.payload.message);\n        //   }\n        // })\n        // .catch((err) => {\n        //   console.log(err);\n        // });\n\n\n\n\n\n    // axios.post('http://localhost:8080/login', frmData)\n    //     .then(\n    //         response => {\n    //           console.log(response)\n    //             alert(\"로그인 성공!\");\n    //             history.push('/'); //상품 정보 조회 화면으로 이동\n    //         }\n    //     );\n         \n}\n// console.log(\"id\",userId)\n    // console.log(\"pwd\",userPwd)\n    // //로그인을 진행하기위해서\n    // //첫번째 useDispatch(액션) 을 활용해서 액션을 dispatch해준다\n    // const body = {\n    //   id: userId,\n    //   password: userPwd,\n    // };\n\n    // dispatch(loginUser(body))\n    //   .then((response) => {\n\n\n \n    return(\n      <>\n       <div class='login' style={{ display: 'flex', justifyContent: 'center' }}>\n      <form name='login' onSubmit={onSubmit}>\n      <div>\n            <h2>로그인</h2>\n            <div>\n              <h4>아이디</h4>\n              <input class='input' id ='userId' type='text' name='userId' value={userId} onChange={onIdHandeler} />\n\n            </div>\n\n            <div>\n              <h4>비밀번호</h4>\n              <input class='input' id='userPwd' type='password' name='userPwd' value={userPwd} onChange={onPwdHandeler} />\n            </div>\n\n            <div>\n              <button class='button' type='submit'>로그인</button>\n            </div>\n\n\n        </div>\n\n        </form>\n        </div></>\n\n  \n    )\n    }\n  \n  \nexport default LoginPage;","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport './RegisterPage.css'\n\nfunction RegisterPage(props) {\n  let history = useHistory();\n\n      const [user, setUser] = useState({\n        userId: '',\n        userName: '',\n        userPwd: '',\n        userEmail: ''\n\n      });\n\n      const onChange = (e) => {\n        const { value, name } = e.target; // e.target 에서 name 과 value 를 추출       \n        setUser({\n            ...user, // 기존의 prd 객체를 복사한 뒤\n            [name]: value // name 키를 가진 값을 value 로 설정\n        });\n    };\n\n    const onReset = () => {\n      setUser({\n        userId: '',\n        userName: '',\n        userPwd: '',\n        userEmail: ''\n        })\n    };\n\n    const onuserIdCheck = (e) => {\n      e.preventDefault();\n      var userId = new FormData(document.userId);\n     \n      axios.post('http://localhost:8080/idCheck/'+user.userId)\n        .then(\n          response => {\n            if (response.data === \"use\") {\n               console.log('가능',response)\n                          alert(\"사용 가능한 아이디 입니다.\");\n                      } else {\n                        console.log('불가능',response)\n                          alert('이미 사용 중인 아이디 입니다.');\n                      }\n                      \n          }\n        );\n    }\n  \n\n  const onSubmit = (e) => {\n      e.preventDefault();\n\n      var frmData = new FormData(document.join);\n\n      if(user.userPwd !== user.userconfPwd){\n        alert('비밀번호가 일치하지 않습니다')\n      }\n      else{\n      axios.post('http://localhost:8080/join', frmData)\n          .then(\n              response => {\n                console.log(response)\n                  alert(\"회원가입이 완료되었습니다!\");\n                  history.push('/login'); //상품 정보 조회 화면으로 이동\n              }\n          );\n         }   \n  }\n  \n\n  return (\n    <><div id='joinForm' class='join'>\n\n      <form name='join' onSubmit={onSubmit} onReset={onReset}>\n        <div><h2>회원가입</h2>\n          <div >\n            <h4>이름</h4>\n            <input class='input' type='text' name='userName' placeholder=\"이름을 입력해주세요\" value={user.userName} onChange={onChange} />\n          </div>\n\n          <div >\n            <h4>이메일</h4>\n            <input class='input' type='text' name='userEmail' placeholder=\"이메일을 입력해주세요\"value={user.userEmail} onChange={onChange} />\n          </div>\n\n          <div>\n            <h4>아이디</h4>\n            <input class='input' type='text' name='userId' placeholder=\"아이디를 입력해주세요\"value={user.userId} onChange={onChange} />\n            <button class='checkbtn' onClick={onuserIdCheck}>중복확인</button>\n          </div>\n\n          <div >\n            <h4>비밀번호</h4>\n            <input class='input' type='password' name='userPwd' placeholder=\"비밀번호를 입력해주세요\" value={user.userPwd} onChange={onChange} />\n          </div>\n\n          <div>\n            <h4>비밀번호 확인</h4>\n            <input  class='input' type='password' name='userconfPwd' placeholder=\"비밀번호를 확인해주세요\" value={user.userconfPwd} onChange={onChange} />\n          </div>\n\n\n          <div>\n            <button type='submit' value='등록' name='submit' class='button' >등록</button>\n          </div>\n\n\n        </div>\n      </form>\n    </div></>\n  )\n}\n\nexport default RegisterPage","import React from 'react';\nimport { Menu } from 'antd';\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nfunction LeftMenu(props) {\n  return (\n    <Menu mode={props.mode}>\n      <Menu.Item key=\"Movie\">\n        <a href=\"/\">Movie</a>\n      </Menu.Item>\n      <Menu.Item key=\"Tv\">\n        <a href=\"/tv\">TV</a>\n      </Menu.Item>\n      <Menu.Item key=\"Calender\">\n        <a href=\"/calender\">Calender</a>\n      </Menu.Item>\n      <Menu.Item key=\"Map\">\n        <a href=\"/map\">Map</a>\n      </Menu.Item>\n    </Menu>\n  )\n}\n\nexport default LeftMenu","import React from 'react';\nimport { Menu } from 'antd';\nimport axios from 'axios';\nimport { useSelector } from \"react-redux\";\n\nfunction RightMenu(props) {\n\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"login\">\n          <a href=\"/login\">로그인</a>\n        </Menu.Item>\n        <Menu.Item key=\"join\">\n          <a href=\"/join\">회원가입</a>\n        </Menu.Item>\n      </Menu>\n    )\n  \n};\n\n\n\n\nexport default RightMenu;","import React, { useState } from 'react';\nimport LeftMenu from './Sections/LeftMenu';\nimport RightMenu from './Sections/RightMenu';\nimport { Drawer, Button, Icon } from 'antd';\nimport './Sections/Navbar.css';\n\nfunction NavBar() {\n  const [visible, setVisible] = useState(false)\n\n  const showDrawer = () => {\n    setVisible(true)\n  };\n\n  const onClose = () => {\n    setVisible(false)\n  };\n\n  return (\n    <nav className=\"menu\" style={{ position: 'fixed', zIndex: 5, width: '100%', fontSize:'40px'}}>\n      <div className=\"menu__logo\">\n        <a href=\"/\">MOVIE_BOZO</a>\n      </div>\n      <div className=\"menu__container\">\n        <div className=\"menu_left\">\n          <LeftMenu mode=\"horizontal\" />\n        </div>\n        <div className=\"menu_rigth\">\n          <RightMenu mode=\"horizontal\" />\n        </div>\n        <Button\n          className=\"menu__mobile-button\"\n          type=\"primary\"\n          onClick={showDrawer}\n        >\n          <Icon type=\"align-right\" />\n        </Button>\n        <Drawer\n          title=\"Basic Drawer\"\n          placement=\"right\"\n          className=\"menu_drawer\"\n          closable={false}\n          onClose={onClose}\n          visible={visible}\n        >\n          <LeftMenu mode=\"inline\" />\n          <RightMenu mode=\"inline\" />\n        </Drawer>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar","import React from 'react'\nimport {Icon} from 'antd';\n\nfunction Footer() {\n    return (\n        <div style={{\n            height: '80px', display: 'flex',\n            flexDirection: 'column', alignItems: 'center',\n            justifyContent: 'center', fontSize:'1rem'\n        }}>\n           <p> group7  <Icon type=\"smile\" /></p>\n        </div>\n    )\n}\n\nexport default Footer\n","import React from 'react'\nimport { Descriptions, Badge } from 'antd';\n\nfunction  TvInfo(props) {\n\n    let { tv } = props;\n\n    return (\n        <Descriptions title=\"방영정보\" bordered>\n            <Descriptions.Item label=\"제목\">{tv.name}</Descriptions.Item>\n            <Descriptions.Item label=\"최초공개일\">{tv.first_air_date}</Descriptions.Item>\n            <Descriptions.Item label=\"최근공개회차\">{tv.last_air_date}</Descriptions.Item>\n            <Descriptions.Item label=\"러닝타임\">{tv.episode_run_time}</Descriptions.Item>\n            <Descriptions.Item label=\"평점\" span={2}>\n                {tv.vote_average}점\n            </Descriptions.Item>\n            <Descriptions.Item label=\"득표수\">{tv.vote_count}</Descriptions.Item>\n            <Descriptions.Item label=\"국가\">{tv.origin_country}</Descriptions.Item>\n            <Descriptions.Item label=\"인기도\">{tv.popularity}</Descriptions.Item>\n        </Descriptions>\n    )\n}\n\nexport default TvInfo","import React, { useEffect, useState } from 'react'\nimport Axios from 'axios'\nimport { Button } from 'antd';\n\nfunction Favorite(props) {\n\n    const tvId = props.tvId\n    const userFrom = props.userFrom\n    const tvTitle = props.TvInfo.title\n    const tvPost = props.TvInfo.backdrop_path\n    const tvRunTime = props.TvInfo.runtime\n\n\n    const [FavoriteNumber, setFavoriteNumber] = useState(0)\n    const [Favorited, setFavorited] = useState(false)\n    let variables = {\n        userFrom: userFrom,\n        tvId: tvId,\n        tvTitle: tvTitle,\n        tvPost: tvPost,\n        tvRunTime: tvRunTime\n    }\n\n\n    useEffect(() => {\n\n\n        Axios.post('/api/favorite/favoriteNumber', variables)\n            .then(response => {\n                console.log(response.data)\n                setFavoriteNumber(response.data.favoriteNumber)\n                if (response.data.success) {\n                } else {\n                    alert('숫자 정보를 가져오는데 실패 했습니다.')\n                }\n            })\n\n\n        Axios.post('/api/favorite/favorited', variables)\n            .then(response => {\n                if (response.data.success) {\n                    console.log(response.data)\n                    setFavorited(response.data.favorited)\n                } else {\n                    alert('정보를 가져오는데 실패 했습니다.')\n                }\n            })\n\n\n\n    }, [])\n\n\n    const onClickFavorite = () => {\n\n        if (Favorited) {\n            Axios.post('/api/favorite/removeFromFavorite', variables)\n                .then(response => {\n                    if (response.data.success) {\n                        setFavoriteNumber(FavoriteNumber - 1)\n                        setFavorited(!Favorited)\n                    } else {\n                        alert('Favorite 리스트에서 지우는 걸 실패했습니다.')\n                    }\n                })\n\n\n        } else {\n            Axios.post('/api/favorite/addToFavorite', variables)\n                .then(response => {\n                    if (response.data.success) {\n                        setFavoriteNumber(FavoriteNumber + 1)\n                        setFavorited(!Favorited)\n\n                    } else {\n                        alert('Favorite 리스트에서 추가하는 걸 실패했습니다.')\n                    }\n                })\n        }\n\n    }\n\n\n\n    return (\n        <div>\n            <Button onClick={onClickFavorite}>{Favorited ? \" Not Favorite\" : \"Add to Favorite \"}  {FavoriteNumber}  </Button>\n\n        </div>\n    )\n}\n\nexport default Favorite","import React, { useEffect, useState } from 'react';\nimport { API_URL, API_KEY, IMAGE_BASE_URL } from '../../Config';\nimport MainImage from '../LandingPage/Sections/MainImage';\nimport TvInfo from './Sections/TvInfo';\nimport TvGridCards from '../commons/TvGridCards';\nimport { Row } from 'antd';\nimport Favorite from './Sections/Favorite';\n\nfunction TvDetail(props) {\n\n    // tvId 불러오기\n    let tvId = props.match.params.tvId\n    const [Tv, setTv] = useState([])\n    const [Casts, setCasts] = useState([])\n    const [ActorToggle, setActorToggle] = useState(false)\n\n    useEffect(() => {\n\n        let endpointCrew = `${API_URL}tv/${tvId}/credits?api_key=${API_KEY}&language=ko-KR`;\n\n        let endpintInfo = `${API_URL}tv/${tvId}?api_key=${API_KEY}&language=ko-KR`;\n\n        // console.log(props.match)\n\n        fetch(endpintInfo)\n            .then(response => response.json())\n            .then(response => {\n                //console.log(response)\n                setTv(response);\n            })\n\n        fetch(endpointCrew)\n            .then(response => response.json())\n            .then(response => {\n\n                setCasts(response.cast);\n            })\n\n\n\n    }, [])\n\n    const toggleActorView = () => {\n        setActorToggle(!ActorToggle)\n    }\n\n    return (\n        <div>\n            {/* Header */}\n\n            <MainImage\n                image={`${IMAGE_BASE_URL}w1280${Tv.backdrop_path}`}\n                title={Tv.name}\n                text={Tv.overview}\n            />\n            {/* Body */}\n            <div style={{ width: '85%', margin: '1rem auto' }}>\n                <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                    <Favorite TvInfo={Tv} tvId={tvId} userFrom={localStorage.getItem('userId')} />\n                </div>\n\n\n\n                {/* TvInfo */}\n\n                <TvInfo\n                    tv={Tv}\n                />\n\n                <br />\n                {/* Actors Grid */}\n\n\n                <div style={{ display: 'flex', justifyContent: 'center', margin: '2rem' }}>\n                    <button onClick={toggleActorView}> 배우 정보 보기 </button>\n                </div>\n\n                {ActorToggle &&\n                    <Row gutter={[16, 16]} >\n\n                        {Casts && Casts.map((cast, index) => (\n                            <React.Fragment key={index}>\n                                <TvGridCards\n                                    image={cast.profile_path ?\n                                        `${IMAGE_BASE_URL}w500${cast.profile_path}` : null}\n                                    charactorName={cast.name}\n                                />\n                            </React.Fragment>\n                        ))}\n\n                    </Row>\n                }\n\n            </div>\n        </div >\n    );\n}\n\nexport default TvDetail;","import { Descriptions } from 'antd';\nimport React from 'react';\n\nfunction MovieInfo(props) {\n\n    let { movie } = props;\n\n\n    return (\n        <Descriptions title=\"영화 정보\" bordered>\n            <Descriptions.Item label=\"제목\">{movie.title}</Descriptions.Item>\n            <Descriptions.Item label=\"개봉일\">{movie.release_date}</Descriptions.Item>\n            <Descriptions.Item label=\"수익\">{movie.revenue} 달러</Descriptions.Item>\n            <Descriptions.Item label=\"러닝타임\">{movie.runtime} 분</Descriptions.Item>\n            <Descriptions.Item label=\"평점\" span={2}>{movie.vote_average} 점</Descriptions.Item>\n            <Descriptions.Item label=\"득표수\">{movie.vote_count}</Descriptions.Item>\n            <Descriptions.Item label=\"현재 개봉 상태\">{movie.status}</Descriptions.Item>\n            <Descriptions.Item label=\"인기도\">{movie.popularity}</Descriptions.Item>\n        </Descriptions>\n    );\n}\n\nexport default MovieInfo;","import React from 'react';\nimport Axios from 'axios'\nimport { useHistory } from 'react-router-dom';\nimport '../../styles/bootstrap.css'\nimport '../MovieDetail.css';\n\nfunction MovieLikeList(props) {\n\n    let history = useHistory();\n\n    const movieId = props.movieId;\n    const userId = \"kim\";\n    // const userId = props.userId;\n    const movieTitle = props.movieInfo.title;\n    const moviePost = props.movieInfo.poster_path;\n    const movieRuntime = props.movieInfo.runtime;\n\n    const onSubmit = () => {\n        var frmData = new FormData(document.frmInsert);\n        alert(\"찜 완료\")\n        console.log(movieTitle)\n        Axios.post('http://localhost:8080/movie/insertLikeList/', frmData)\n            .then(\n                response => {\n                    alert(\"찜 완료\");\n                }\n            )\n\n    }\n\n\n    return (\n        <div>\n            <form name=\"frmInsert\" onSubmit={onSubmit}>\n                <input type='hidden' name='movieId' value={movieId} />\n                {/* <input type='hidden' name='tvId' value={tvId} /> */}\n                <input type='hidden' name='userId' value={userId} />\n                <input type='hidden' name='movieTitle' value={movieTitle} />\n                <input type='hidden' name='moviePost' value={moviePost} />\n                <input type='hidden' name='movieRuntime' value={movieRuntime} />\n                {/* <input type='hidden' name='tvTitle' value={tvTitle} />\n                <input type='hidden' name='tvPost' value={tvPost} />\n                <input type='hidden' name='tvRuntime' value={tvRuntime} /> */}\n                <input class=\"btn btn-danger\" type='submit' value=\"♥\" />\n            </form>\n\n        </div>\n    );\n}\n\nexport default MovieLikeList;","import React, { useEffect, useState } from 'react';\nimport { API_URL, API_KEY, IMAGE_BASE_URL } from '../../ConfigMovie';\nimport MovieMainImage from '../LandingPage/Sections/MovieMainImage';\nimport MovieInfo from './Sections/MovieInfo';\nimport MovieGridCards from '../commons/MovieGridCards';\nimport { Row } from 'antd';\nimport MovieLikeList from './Sections/MovieLikeList';\nimport '../styles/bootstrap.css'\nimport './MovieDetail.css';\nfunction MovieDetail(props) {\n\n    // movieId 불러오기\n    // params로 URL을 통해서 넘겨줌\n    let movieId = props.match.params.movieId\n    const [Movie, setMovie] = useState([]);\n    const [Casts, setCasts] = useState([]);\n    // toggle클릭시 보여주게 하기위해서 추가 : ActorToggle이 true일때 뿌려주기\n    const [ActorToggle, setActorToggle] = useState(false);\n    const [LikeBtn, setLikeBtn] = useState(true);\n\n    useEffect(() => {\n\n        let endpointCrew = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=ko-KR`;\n\n        let endprintInfo = `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=ko-KR`;\n\n        // console.log(props.match)\n\n        fetch(endprintInfo)\n            .then(response => response.json())\n            .then(response => {\n                console.log(response)\n                setMovie(response);\n            })\n\n        fetch(endpointCrew)\n            .then(response => response.json())\n            .then(response => {\n                console.log('responseForCrew', response)\n                setCasts(response.cast);\n            })\n\n    }, [])\n\n    const toggleActorView = () => {\n        // 실행시 false => true => false => true 반복 : !(반대)\n        setActorToggle(!ActorToggle)\n    };\n\n    const LikeBtnLook = () => {\n        setLikeBtn(!LikeBtn)\n    }\n\n    return (\n        <div>\n            {/* Header */}\n\n            <MovieMainImage\n                image={`${IMAGE_BASE_URL}w1280${Movie.backdrop_path}`}\n                title={Movie.title}\n                text={Movie.overview}\n            />\n\n\n            {/* Body */}\n            <div style={{ width: '85%', margin: '1rem auto' }}>\n\n\n                <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                    {/* 찜 리스트로 이동 */}\n                    <div id=\"likeListBtn\" style={{ display: 'flex', justifyContent: 'flex-end', margintop: '10px' }}>\n                        <button class=\"btn btn-danger\"><a href=\"/likeList\">찜 목록</a></button>\n                    </div>\n\n                    {/* 좋아요 버튼 */}\n                    {/* localStorage에 있는 값 가져오기 */}\n                    <MovieLikeList movieInfo={Movie} movieId={movieId} userId={localStorage.getItem('userId')} />\n\n                </div>\n\n\n\n                {/* Movie Info */}\n\n                <MovieInfo\n                    movie={Movie}\n                />\n\n                <br />\n\n                {/* Actors Grid */}\n\n                <div style={{ display: 'flex', justifyContent: 'center', margin: '2rem' }}>\n                    <button class=\"btn btn-secondary\" onClick={toggleActorView}> 배우 정보 보기 </button>\n                </div>\n\n\n                {/* ActorToggle이 있을때(true) 뿌리기 */}\n                {ActorToggle &&\n                    <Row gutter={[16, 16]}>\n                        {Casts && Casts.map((cast, index) => (\n                            <React.Fragment key={index}>\n                                <MovieGridCards\n                                    image={cast.profile_path ? `${IMAGE_BASE_URL}w500${cast.profile_path}` : null}\n                                    characterName={cast.name}\n                                />\n                            </React.Fragment>\n                        ))}\n\n\n                    </Row>\n\n                }\n\n            </div>\n        </div >\n    );\n}\n\nexport default MovieDetail;","import Axios from 'axios';\nimport React from 'react';\nimport { IMAGE_BASE_URL } from '../../../ConfigMovie';\nimport '../../styles/bootstrap.css'\n\nfunction MovieLikeListItem(props) {\n\n    const onDeleteItem = () => {\n        if (window.confirm(\"해당 좋아요 목록을 삭제하시겠습니까?\")) {\n            Axios.get('http://localhost:8080/movie/delete/' + props.movie.movieId)\n                .then(\n                    () => {\n                        window.location.reload();\n                    }\n                ).catch(err => console.log(err));\n        }\n    }\n\n\n    return (\n\n        <div style={{ marginBottom: '10px', marginTop: '10px', border: '1px solid', borderRadius: '4px' }}>\n            <span style={{ display: 'inline-block', width: '20%', marginRight: '10px', float: 'left' }}><img style={{ width: '100%', borderRadius: '8px', padding: '3px' }} src={`${IMAGE_BASE_URL}w200${props.movie.moviePost}`} /></span>\n            <span style={{\n                display: 'inline-block', width: '45%', textAlign: 'center',\n                float: 'left', borderRight: '1px solid', height: '308px', lineHeight: '308px'\n            }}>{props.movie.movieTitle}</span>\n            <span style={{\n                display: 'inline-block', background: '#f5f5f3',\n                width: '24%', textAlign: 'center', float: 'left',\n                lineHeight: '308px', borderRight: '1px solid'\n            }}>{props.movie.movieRuntime} 분</span>\n\n            <span style={{ display: 'inline-block', width: '8%', textAlign: 'center', float: 'left', marginTop: '140px', marginLeft: '6px' }}>\n                <button class=\"btn-close\" aria-label=\"Close\" onClick={onDeleteItem}></button>\n            </span>\n        </div>\n    );\n}\n\nexport default MovieLikeListItem;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport MovieLikeListItem from './MovieLikeListItem';\n\nfunction MovieLikeListView(props) {\n\n    //state\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    // const userId = localStorage.getItem('userId');\n    const userId = \"kim\";\n\n    //서버에 요청해서 데이터를 받아오기\n    const loadData = async () => {\n        setLoading(true);\n        // userid 달고\n        const response = await axios.get(`http://localhost:8080/movie/likeListView/${userId}`);\n        console.log(response.data);\n        setData(response.data.likeList);\n        setLoading(false);\n    }\n\n    useEffect(() => {\n        loadData();\n    }, []);\n\n    return (\n        <div style={{ display: 'flex', justifyContent: 'center', margin: '2rem', flexDirection: 'column', padding: '20%', paddingTop: '0' }}>\n            <h3 style={{ color: 'white', background: '#f1aeb5', border: '1px solid', borderRadius: '4px', textAlign: 'center', padding: '2px' }}>LIKE LIST ♥</h3>\n            <div>\n                <span style={{ display: 'inline-block', width: '20%', textAlign: 'center', border: '1px solid', marginRight: '1%', borderRadius: '4px', background: '#f5f5f3' }}>포스터</span>\n                <span style={{ display: 'inline-block', width: '45%', textAlign: 'center', border: '1px solid', marginRight: '1%', borderRadius: '4px' }}>제목</span>\n                <span style={{ display: 'inline-block', width: '22%', textAlign: 'center', border: '1px solid', marginRight: '1%', borderRadius: '4px', background: '#f5f5f3' }}>러닝타임</span>\n                <span style={{ display: 'inline-block', width: '10%', textAlign: 'center', border: '1px solid', borderRadius: '4px' }}>삭제</span>\n            </div>\n            {\n                data.map(function (movie, index) {\n                    return <MovieLikeListItem movie={movie} key={index} />\n                })\n            }\n\n\n        </div>\n    );\n}\n\nexport default MovieLikeListView;","/* global kakao */\nimport React, { useEffect } from 'react';\n\nconst Location = () => {\n\n  var map, ps, infowindow;\n\n  useEffect(() => {\n\n    // 마커를 클릭하면 장소명을 표출할 인포윈도우 입니다\n    infowindow = new kakao.maps.InfoWindow({ zIndex: 1 });\n\n    var mapContainer = document.getElementById('map'), // 지도를 표시할 div \n      mapOption = {\n        center: new kakao.maps.LatLng(37.566826, 126.9786567), // 지도의 중심좌표\n        level: 3 // 지도의 확대 레벨\n      };\n\n    // 지도를 생성합니다    \n    map = new kakao.maps.Map(mapContainer, mapOption);\n\n    // 일반 지도와 스카이뷰로 지도 타입을 전환할 수 있는 지도타입 컨트롤을 생성합니다\n    var mapTypeControl = new kakao.maps.MapTypeControl();\n\n    // 지도에 컨트롤을 추가해야 지도위에 표시됩니다\n    // kakao.maps.ControlPosition은 컨트롤이 표시될 위치를 정의하는데 TOPRIGHT는 오른쪽 위를 의미합니다\n    map.addControl(mapTypeControl, kakao.maps.ControlPosition.TOPRIGHT);\n\n    // 지도 확대 축소를 제어할 수 있는  줌 컨트롤을 생성합니다\n    var zoomControl = new kakao.maps.ZoomControl();\n    map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);\n\n    // 장소 검색 객체를 생성합니다\n    ps = new kakao.maps.services.Places();\n\n    // 키워드로 장소를 검색합니다\n    ps.keywordSearch('영화관', placesSearchCB);\n\n\n  }, [])\n\n  // 키워드 검색 완료 시 호출되는 콜백함수 입니다\n  function placesSearchCB(data, status, pagination) {\n    if (status === kakao.maps.services.Status.OK) {\n\n      // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\n      // LatLngBounds 객체에 좌표를 추가합니다\n      var bounds = new kakao.maps.LatLngBounds();\n\n      for (var i = 0; i < data.length; i++) {\n        displayMarker(data[i]);\n        bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));\n      }\n\n      // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\n      map.setBounds(bounds);\n    }\n  }\n\n  // 지도에 마커를 표시하는 함수입니다\n  function displayMarker(place) {\n\n    // 마커를 생성하고 지도에 표시합니다\n    var marker = new kakao.maps.Marker({\n      map: map,\n      position: new kakao.maps.LatLng(place.y, place.x)\n    });\n\n    // 마커에 클릭이벤트를 등록합니다\n    kakao.maps.event.addListener(marker, 'click', function () {\n      // 마커를 클릭하면 장소명이 인포윈도우에 표출됩니다\n      infowindow.setContent('<div style=\"padding:5px;font-size:12px;\">' + '<a target=\"_blank\" href=\"https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=1&ie=utf8&query='\n        + place.place_name + '\">' + place.place_name + '</a>' + '</div>');\n      infowindow.open(map, marker);\n    });\n  }\n\n\n\n\n  return (\n    <div>\n      <div id=\"map\" style={{ width: \"100%\", height: \"700px\" }}></div>\n    </div>\n  )\n}\n\nexport default Location;\n","import React, { Suspense } from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport Auth from \"../hoc/auth\";\n// pages for this product\nimport TvLandingPage from \"./views/LandingPage/TvLandingPage.js\";\nimport MovieLandingPage from \"./views/LandingPage/MovieLandingPage.js\";\nimport CalenderPage from \"./CalenderComponents/App/App2.js\";\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\nimport NavBar from \"./views/NavBar/NavBar\";\nimport Footer from \"./views/Footer/Footer\"\nimport TvDetail from './views/TvDetail/TvDetail';\nimport MovieDetail from './views/MovieDetail/MovieDetail';\nimport MovieLikeListView from './views/MovieDetail/Sections/MovieLikeListView';\nimport Map from './views/Map/Map';\n\n//null   Anyone Can go inside\n//true   only logged in user can go inside\n//false  logged in user can't go inside\n\nfunction App() {\n  return (\n    <Suspense fallback={(<div>Loading...</div>)}>\n      <NavBar />\n      <div style={{ paddingTop: '69px', minHeight: 'calc(100vh - 80px)' }}>\n        <Switch>\n          <Route exact path=\"/\" component={Auth(MovieLandingPage, null)} />\n          <Route exact path=\"/tv\" component={Auth(TvLandingPage, null)} />\n          <Route exact path=\"/calender\" component={Auth(CalenderPage, false)} />\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\n          <Route exact path=\"/join\" component={Auth(RegisterPage, false)} />\n          <Route exact path=\"/tv/:tvId\" component={Auth(TvDetail, null)} />\n          <Route exact path=\"/movie/:movieId\" component={Auth(MovieDetail, null)} />\n          <Route exact path=\"/likeList\" component={Auth(MovieLikeListView, null)} />\n          <Route exact path=\"/map\" component={Auth(Map, null)} />\n        </Switch>\n      </div>\n      <Footer />\n    </Suspense>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport user from './user_reducer';\n\nconst rootReducer = combineReducers({\n    user,\n});\n\nexport default rootReducer;","import {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from '../_actions/types';\n \n\nexport default function(state={},action){\n    switch(action.type){\n        case REGISTER_USER:\n            return {...state, register: action.payload }\n        case LOGIN_USER:\n            return {...state, loginSuccess: action.payload }\n        case AUTH_USER:\n            return {...state, userData: action.payload }\n        case LOGOUT_USER:\n            return {...state }\n        default:\n            return state;\n    }\n}","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'core-js';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport Reducer from './_reducers';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\n\nReactDOM.render(\n    <Provider\n        store={createStoreWithMiddleware(\n            Reducer,\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n        )}\n    >\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}